pipeline {
    agent {
        kubernetes {
            label "agent-${UUID.randomUUID().toString()}"
            yamlFile "backend/pipeline/agent.yaml"
        }
    }
    environment {
        GKE_CLUSTER_NAME = 'lloydsbank-cluster'
        GKE_PROJECT = 'sap-2024novasdeblr-prd-mg'
        GKE_ZONE = 'asia-south1'
        DOCKER_REGISTRY = 'asia-south1-docker.pkg.dev/sap-2024novasdeblr-prd-mg/lloyds-docker-repo'
        DOCKER_IMAGE_NAME = 'backend-image'
        SONARQUBE_URL = 'http://35.201.41.28:9000'
        SONARQUBE_TOKEN = credentials('jenkins-sonar')
    }
    stages {
        stage('Clone Repository') {
            steps {
                checkout scm
            }
        }
        stage('Maven Build & Test') {
            steps {
                container('maven-container') {
                    script {
                        dir('backend') {
                            sh 'mvn clean install' // Run Maven build and tests
                        }
                    }
                }
            }
        }
        stage('SonarQube Analysis') {
            steps {
                container('sonarqube-scanner') {
                    withSonarQubeEnv('jenkins-sonar') {
                        sh """
                            mvn sonar:sonar \
                            -Dsonar.projectKey=backend-sonartest \
                            -Dsonar.projectName="Backend Analysis" \
                            -Dsonar.host.url=${SONARQUBE_URL} \
                            -Dsonar.login=${SONARQUBE_TOKEN}
                        """
                    }
                }
            }
        }
        stage('Authenticate and Push Docker Image') {
            steps {
                withCredentials([file(credentialsId: 'gcp-artifact-registry-key', variable: 'GCLOUD_SERVICE_KEY')]) {
                    container('gcloud-docker') {
                        script {
                            sh 'gcloud auth activate-service-account --key-file=$GCLOUD_SERVICE_KEY'
                            sh 'gcloud auth configure-docker asia-south1-docker.pkg.dev'
                            sh "docker build -t ${DOCKER_REGISTRY}/${DOCKER_IMAGE_NAME}:v1 ./backend"
                            sh "docker push ${DOCKER_REGISTRY}/${DOCKER_IMAGE_NAME}:v1"
                        }
                    }
                }
            }
        }
        stage('Deploy to GKE') {
            steps {
                container('gcloud-docker') {
                    script {
                        sh "gcloud container clusters get-credentials ${GKE_CLUSTER_NAME} --zone ${GKE_ZONE} --project ${GKE_PROJECT}"
                        sh 'kubectl apply -f backend/kubernetes/deployment.yaml'
                        sh 'kubectl apply -f backend/kubernetes/service.yaml'
                    }
                }
            }
        }
    }
}
